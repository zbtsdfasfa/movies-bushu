{"version":3,"sources":["webpack://movie-list/./src/movie/list/index.js","webpack://movie-list/./src/movie/list/index.module.less?bbc3","webpack://movie-list/./src/api/movie.js","webpack://movie-list/./src/movie/pager/index.module.less?10e2","webpack://movie-list/./src/movie/pager/index.js","webpack://movie-list/./src/movie/index.js"],"names":["container","createMovies","movies","result","map","m","url","cover","title","rate","join","html","$","addClass","appendTo","getMovies","page","size","axios","params","res","data","createPagers","limit","total","createTag","text","status","targetPage","span","className","styles","on","movieList","movieTotal","empty","maxPage","Math","ceil","min","floor","maxCount","max","i","init"],"mappings":"mLAEA,IAAIA,EASG,SAASC,EAAaC,GACzB,IAAMC,EAASD,EAAOE,KAClB,SAACC,GAAD,kCACKA,EAAEC,IADP,uCACyCD,EAAEE,MAD3C,8BAEKF,EAAEC,IAFP,uCCZoD,0BDYpD,aAE0DD,EAAEG,MAF5D,iCCZqF,wBDYrF,aAGsBH,EAAEI,KAHxB,qBAMCC,KAAK,IACVV,EAAUW,KAAKR,GAhBfH,EAAYY,IAAE,SAASC,SCHC,yBDG0BC,SAAS,Q,0UEHxD,SAAeC,EAAtB,oC,iDAAO,WAAyBC,EAAMC,GAA/B,sGACaC,QAAU,cAAe,CACrCC,OAAQ,CACJH,OACAC,UAJL,cACCG,EADD,yBAOIA,EAAIC,MAPR,4C,sBCAP,SAAgB,MAAQ,0BAA0B,SAAW,0BAA0B,OAAS,yB,4TCIhG,IAAIrB,EAUG,SAASsB,EAAaN,EAAMO,EAAOC,GAQtC,SAASC,EAAUC,EAAMC,EAAQC,GAC7B,IAAMC,EAAOjB,IAAE,UAAUE,SAASd,GAAW0B,KAAKA,GAC5CI,EAAYC,EAAOJ,GACzBE,EAAKhB,SAASiB,GAEA,IAAVH,GACAE,EAAKG,GAAG,QAAR,2BAAiB,mHAGKjB,EAAUa,EAAYL,GAH3B,OAKbtB,GAFMmB,EAHO,QAKIC,KAAKY,WAEtBX,EAAaM,EAAYL,EAAOH,EAAIC,KAAKa,YAP5B,4CAZzBlC,EAAUmC,QAuBV,IAAIC,EAAUC,KAAKC,KAAKd,EAAQD,GAEhCE,EAAU,KAAe,IAATT,EAAa,WAAa,GAAI,GAE9CS,EAAU,MAAgB,IAATT,EAAa,WAAa,GAAIA,EAAO,GAEtD,IACIuB,EAAMF,KAAKG,MAAMxB,EAAOyB,GACxBF,EAAM,IACNA,EAAM,GAEV,IAAIG,EAAMH,EALO,GAKU,EACvBG,EAAMN,IACNM,EAAMN,GAGV,IAAK,IAAIO,EAAIJ,EAAKI,EAAID,EAAKC,IACvBlB,EAAUkB,EAAG3B,GAAQ2B,EAAI,SAAW,GAAIA,GAI5ClB,EAAU,MAAOT,IAASoB,EAAU,WAAa,GAAIpB,EAAO,GAE5DS,EAAU,KAAMT,IAASoB,EAAU,WAAa,GAAIA,G,6WC5DxD,mHACoBrB,EAAU,EAAG,IADjC,cAEId,GADImB,EADR,QAEqBC,KAAKY,WAF1B,SAGuBX,EAAa,EAAG,GAAIF,EAAIC,KAAKa,YAHpD,0D,sBDIIlC,EAAYY,IAAE,SAASC,SAASkB,SAAcjB,SAAS,Q,mCCC3D8B","file":"js/chunk-8567b.js","sourcesContent":["import $ from 'jquery'\r\nimport styles from './index.module.less'\r\nlet container;\r\nfunction init() {\r\n    container = $('<div>').addClass(styles.container).appendTo('#app');\r\n}\r\n\r\ninit()\r\n\r\n\r\n//根据传入的电影数组，创建元素，    填充到容器中，\r\nexport function createMovies(movies) {\r\n    const result = movies.map(\r\n        (m) => `<div>\r\n  <a href=\"${m.url}\" target=\"_blank\"><img src=\"${m.cover}\"></a>\r\n  <a href=\"${m.url}\" target=\"_blank\"><p class=\"${styles.title}\">${m.title}</p></a>\r\n  <p class=\"${styles.rate}\">${m.rate}</p>\r\n  </div>`\r\n    )\r\n        .join('');\r\n    container.html(result);\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"kOrlLuNtBylKs91raZIOU\",\"title\":\"_3pYTYHeeDH0bFkeCn3ld06\",\"rate\":\"nm_NW-jBa8IeDMNfp4JFo\"};","import axios from \"axios\";\r\nexport async function getMovies(page, size) {\r\n    let res = await axios.get('/api/movies', {\r\n        params: {\r\n            page,\r\n            size\r\n        }\r\n    })\r\n    return res.data\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"pager\":\"_1VN1YU2G2lDHkQWRtrceUO\",\"disabled\":\"_2dd1ehDdnLaT1lF72w3i1q\",\"active\":\"kLc696jYNRmHedH9tJqp3\"};","import $ from 'jquery'\r\nimport styles from './index.module.less'\r\nimport { getMovies } from '../../api/movie'\r\nimport { createMovies } from '../list/index'\r\n\r\nlet container;\r\nfunction init() {\r\n    container = $('<div>').addClass(styles.pager).appendTo('#app')\r\n}\r\n\r\ninit()\r\n\r\n\r\n\r\n// 创建分页函数，传入当前页码page，容量limit，和总页数\r\nexport function createPagers(page, limit, total) {\r\n\r\n    container.empty();\r\n    /*\r\n    辅助函数，负责帮忙创建标签\r\n    text：标签文本\r\n    status：标签状态，空字符串-普通状态，disabled-禁用状态，active-选中状态\r\n    */\r\n    function createTag(text, status, targetPage) {\r\n        const span = $('<span>').appendTo(container).text(text)\r\n        const className = styles[status]\r\n        span.addClass(className)\r\n        // 只有是普通状态的时候才添加点击事件\r\n        if (status == '') {\r\n            span.on('click', async function () {\r\n                // 点击要做三件事情\r\n                // 1,重新获取数据\r\n                const res = await getMovies(targetPage, limit)\r\n                // 2,重新生成列表区域\r\n                createMovies(res.data.movieList)\r\n                // 3,重新生成分页区域\r\n                createPagers(targetPage, limit, res.data.movieTotal)\r\n            })\r\n        }\r\n    }\r\n    let maxPage = Math.ceil(total / limit);//最大页码\r\n    // 创建首页\r\n    createTag('首页', page === 1 ? 'disabled' : '', 1)\r\n    // 创建上一页\r\n    createTag('上一页', page === 1 ? 'disabled' : '', page - 1)\r\n    // 创建数字页码\r\n    const maxCount = 10; //最大页码数量\r\n    let min = Math.floor(page - maxCount / 2)\r\n    if (min < 1) {\r\n        min = 1\r\n    }\r\n    let max = min + maxCount - 1\r\n    if (max > maxPage) {\r\n        max = maxPage\r\n    }\r\n    // 循环创建\r\n    for (let i = min; i < max; i++) {\r\n        createTag(i, page == i ? 'active' : '', i)\r\n    }\r\n    // createTag('1', 'active', 1)\r\n    // 创建下一页\r\n    createTag('下一页', page === maxPage ? 'disabled' : '', page + 1)\r\n    // 创建尾页\r\n    createTag('尾页', page === maxPage ? 'disabled' : '', maxPage)\r\n}","import { createMovies } from './list'\r\nimport { getMovies } from '@/api/movie'\r\nimport { createPagers } from './pager'\r\nasync function init() {\r\n    let res = await getMovies(1, 30)\r\n    createMovies(res.data.movieList)\r\n    let resutl = await createPagers(1, 30, res.data.movieTotal)\r\n}\r\ninit()"],"sourceRoot":""}